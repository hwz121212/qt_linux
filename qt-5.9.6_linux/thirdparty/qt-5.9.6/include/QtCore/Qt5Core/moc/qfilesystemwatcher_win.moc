/****************************************************************************
** Meta object code from reading C++ file 'qfilesystemwatcher_win.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.6)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'qfilesystemwatcher_win.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.6. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_QWindowsRemovableDriveListener_t {
    QByteArrayData data[6];
    char stringdata0[102];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_QWindowsRemovableDriveListener_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_QWindowsRemovableDriveListener_t qt_meta_stringdata_QWindowsRemovableDriveListener = {
    {
QT_MOC_LITERAL(0, 0, 30), // "QWindowsRemovableDriveListener"
QT_MOC_LITERAL(1, 31, 10), // "driveAdded"
QT_MOC_LITERAL(2, 42, 0), // ""
QT_MOC_LITERAL(3, 43, 12), // "driveRemoved"
QT_MOC_LITERAL(4, 56, 19), // "driveLockForRemoval"
QT_MOC_LITERAL(5, 76, 25) // "driveLockForRemovalFailed"

    },
    "QWindowsRemovableDriveListener\0"
    "driveAdded\0\0driveRemoved\0driveLockForRemoval\0"
    "driveLockForRemovalFailed"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_QWindowsRemovableDriveListener[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       5,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       5,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    0,   39,    2, 0x06 /* Public */,
       3,    0,   40,    2, 0x06 /* Public */,
       3,    1,   41,    2, 0x06 /* Public */,
       4,    1,   44,    2, 0x06 /* Public */,
       5,    1,   47,    2, 0x06 /* Public */,

 // signals: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void, QMetaType::QString,    2,
    QMetaType::Void, QMetaType::QString,    2,
    QMetaType::Void, QMetaType::QString,    2,

       0        // eod
};

void QWindowsRemovableDriveListener::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        QWindowsRemovableDriveListener *_t = static_cast<QWindowsRemovableDriveListener *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->driveAdded(); break;
        case 1: _t->driveRemoved(); break;
        case 2: _t->driveRemoved((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 3: _t->driveLockForRemoval((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 4: _t->driveLockForRemovalFailed((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            typedef void (QWindowsRemovableDriveListener::*_t)();
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&QWindowsRemovableDriveListener::driveAdded)) {
                *result = 0;
                return;
            }
        }
        {
            typedef void (QWindowsRemovableDriveListener::*_t)();
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&QWindowsRemovableDriveListener::driveRemoved)) {
                *result = 1;
                return;
            }
        }
        {
            typedef void (QWindowsRemovableDriveListener::*_t)(const QString & );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&QWindowsRemovableDriveListener::driveRemoved)) {
                *result = 2;
                return;
            }
        }
        {
            typedef void (QWindowsRemovableDriveListener::*_t)(const QString & );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&QWindowsRemovableDriveListener::driveLockForRemoval)) {
                *result = 3;
                return;
            }
        }
        {
            typedef void (QWindowsRemovableDriveListener::*_t)(const QString & );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&QWindowsRemovableDriveListener::driveLockForRemovalFailed)) {
                *result = 4;
                return;
            }
        }
    }
}

const QMetaObject QWindowsRemovableDriveListener::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_QWindowsRemovableDriveListener.data,
      qt_meta_data_QWindowsRemovableDriveListener,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *QWindowsRemovableDriveListener::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *QWindowsRemovableDriveListener::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_QWindowsRemovableDriveListener.stringdata0))
        return static_cast<void*>(this);
    if (!strcmp(_clname, "QAbstractNativeEventFilter"))
        return static_cast< QAbstractNativeEventFilter*>(this);
    return QObject::qt_metacast(_clname);
}

int QWindowsRemovableDriveListener::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 5)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 5;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 5)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 5;
    }
    return _id;
}

// SIGNAL 0
void QWindowsRemovableDriveListener::driveAdded()
{
    QMetaObject::activate(this, &staticMetaObject, 0, nullptr);
}

// SIGNAL 1
void QWindowsRemovableDriveListener::driveRemoved()
{
    QMetaObject::activate(this, &staticMetaObject, 1, nullptr);
}

// SIGNAL 2
void QWindowsRemovableDriveListener::driveRemoved(const QString & _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 2, _a);
}

// SIGNAL 3
void QWindowsRemovableDriveListener::driveLockForRemoval(const QString & _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 3, _a);
}

// SIGNAL 4
void QWindowsRemovableDriveListener::driveLockForRemovalFailed(const QString & _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 4, _a);
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
